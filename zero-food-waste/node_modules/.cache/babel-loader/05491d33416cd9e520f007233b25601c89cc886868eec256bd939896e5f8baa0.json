{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Message.css'; // Make sure the path to your CSS file is correct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [conversations, setConversations] = useState([{\n    id: 1,\n    name: 'Mert',\n    messages: ['Hi, that food is still available?']\n  }\n  // ...other conversations\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSelectConversation = conversationId => {\n    const conversation = conversations.find(c => c.id === conversationId);\n    setSelectedConversation(conversation);\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n    // Here you would send the message to the backend and update the state accordingly\n    console.log(\"Message to send:\", newMessage);\n    // For demonstration, we just clear the input\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"conversation-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), conversations.map(convo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `conversation ${(selectedConversation === null || selectedConversation === void 0 ? void 0 : selectedConversation.id) === convo.id ? \"active\" : \"\"}`,\n        onClick: () => handleSelectConversation(convo.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-name\",\n          children: convo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-preview\",\n          children: convo.messages[convo.messages.length - 1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, convo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: `conversation-detail ${selectedConversation ? \"active\" : \"\"}`,\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-thread\",\n          children: selectedConversation.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type new message here\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-conversation-selected\",\n        children: \"Select a conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"xt/bxajcame9BPOgQqbtrKuGm2E=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Message","_s","selectedConversation","setSelectedConversation","conversations","setConversations","id","name","messages","newMessage","setNewMessage","handleSelectConversation","conversationId","conversation","find","c","handleSendMessage","trim","console","log","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","convo","onClick","length","message","index","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Message.css'; // Make sure the path to your CSS file is correct\r\n\r\nconst Message = () => {\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [conversations, setConversations] = useState([\r\n    { id: 1, name: 'Mert', messages: ['Hi, that food is still available?'] },\r\n    // ...other conversations\r\n  ]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSelectConversation = (conversationId) => {\r\n    const conversation = conversations.find(c => c.id === conversationId);\r\n    setSelectedConversation(conversation);\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim() || !selectedConversation) return;\r\n    // Here you would send the message to the backend and update the state accordingly\r\n    console.log(\"Message to send:\", newMessage);\r\n    // For demonstration, we just clear the input\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-app\">\r\n      <aside className=\"conversation-list\">\r\n        <div className=\"search-bar\">\r\n          <input type=\"text\" placeholder=\"Search\" />\r\n        </div>\r\n        {conversations.map(convo => (\r\n          <div key={convo.id} className={`conversation ${selectedConversation?.id === convo.id ? \"active\" : \"\"}`} onClick={() => handleSelectConversation(convo.id)}>\r\n            <div className=\"conversation-name\">{convo.name}</div>\r\n            <div className=\"conversation-preview\">{convo.messages[convo.messages.length - 1]}</div>\r\n          </div>\r\n        ))}\r\n      </aside>\r\n      <main className={`conversation-detail ${selectedConversation ? \"active\" : \"\"}`}>\r\n        {selectedConversation ? (\r\n          <>\r\n            <div className=\"message-thread\">\r\n              {selectedConversation.messages.map((message, index) => (\r\n                <div key={index} className=\"message\">{message}</div>\r\n              ))}\r\n            </div>\r\n            <div className=\"message-input-box\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type new message here\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n              />\r\n              <button onClick={handleSendMessage}>âž¤</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"no-conversation-selected\">Select a conversation</div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}