{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Message.css'; // Make sure you have the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messages = () => {\n  _s();\n  // State for handling messages\n  const [currentThread, setCurrentThread] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n  // Mockup threads data\n  const [threads, setThreads] = useState([{\n    id: 1,\n    name: 'Alice Smith',\n    messages: ['Hi there!']\n  }\n  // ...other threads\n  ]);\n\n  // Handles clicking on a thread to view messages\n  const handleThreadClick = thread => {\n    setCurrentThread(thread);\n  };\n\n  // Handles sending a message\n  const handleSendMessage = () => {\n    if (!newMessage.trim()) return;\n    // Add sending message logic here\n    // For now, we'll just update the local state\n    const updatedThreads = threads.map(thread => {\n      if (thread.id === currentThread.id) {\n        return {\n          ...thread,\n          messages: [...thread.messages, newMessage]\n        };\n      }\n      return thread;\n    });\n    setThreads(updatedThreads);\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-system\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread-list\",\n        children: threads.map(thread => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thread-item ${currentThread && currentThread.id === thread.id ? 'active-thread' : ''}`,\n          onClick: () => handleThreadClick(thread),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"thread-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-name\",\n              children: thread.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-preview\",\n              children: thread.messages[thread.messages.length - 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, thread.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-area\",\n        children: currentThread ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-list\",\n          children: currentThread.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: msg\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-thread-selected\",\n          children: \"Select a conversation to start messaging.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"4wllYNfUf8u9ddKMqC/bdez06L4=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Messages","_s","currentThread","setCurrentThread","newMessage","setNewMessage","threads","setThreads","id","name","messages","handleThreadClick","thread","handleSendMessage","trim","updatedThreads","map","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","msg","index","_c","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Message.css'; // Make sure you have the CSS file for styling\r\n\r\nconst Messages = () => {\r\n  // State for handling messages\r\n  const [currentThread, setCurrentThread] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  // Mockup threads data\r\n  const [threads, setThreads] = useState([\r\n    { id: 1, name: 'Alice Smith', messages: ['Hi there!'] },\r\n    // ...other threads\r\n  ]);\r\n\r\n  // Handles clicking on a thread to view messages\r\n  const handleThreadClick = (thread) => {\r\n    setCurrentThread(thread);\r\n  };\r\n\r\n  // Handles sending a message\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim()) return;\r\n    // Add sending message logic here\r\n    // For now, we'll just update the local state\r\n    const updatedThreads = threads.map((thread) => {\r\n      if (thread.id === currentThread.id) {\r\n        return {\r\n          ...thread,\r\n          messages: [...thread.messages, newMessage],\r\n        };\r\n      }\r\n      return thread;\r\n    });\r\n    setThreads(updatedThreads);\r\n    setNewMessage('');\r\n  };\r\n  return (\r\n    <div className=\"messages-container\">\r\n      <div className=\"message-system\">\r\n        <div className=\"thread-list\">\r\n          {/* List of conversations */}\r\n          {threads.map((thread) => (\r\n            <div\r\n              key={thread.id}\r\n              className={`thread-item ${currentThread && currentThread.id === thread.id ? 'active-thread' : ''}`}\r\n              onClick={() => handleThreadClick(thread)}\r\n            >\r\n              <div className=\"thread-details\">\r\n                <div className=\"thread-name\">{thread.name}</div>\r\n                <div className=\"thread-preview\">{thread.messages[thread.messages.length - 1]}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"message-area\">\r\n          {/* Message view for the selected conversation */}\r\n          {currentThread ? (\r\n            <div className=\"message-list\">\r\n              {/* List of messages in the conversation */}\r\n              {currentThread.messages.map((msg, index) => (\r\n                <div key={index} className=\"message-bubble\">\r\n                  {msg}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-thread-selected\">\r\n              {/* Prompt when no conversation is selected */}\r\n              Select a conversation to start messaging.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}