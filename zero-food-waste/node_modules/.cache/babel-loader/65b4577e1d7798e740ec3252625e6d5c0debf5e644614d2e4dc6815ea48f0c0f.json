{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Message.css'; // Import your CSS file where you define the layout styles\n\n// Mock data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mockConversations = [{\n  id: 1,\n  user: 'Alice',\n  messages: ['Hi', 'How are you?']\n}, {\n  id: 2,\n  user: 'Bob',\n  messages: ['Hello', 'Good morning']\n}\n// ... other conversations\n];\nfunction ConversationsList({\n  onSelectConversation,\n  conversations\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversationsList\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"Search\",\n      className: \"searchBar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversationItem\",\n      onClick: () => onSelectConversation(conversation.id),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: conversation.avatarUrl,\n        alt: `${conversation.user}'s avatar`,\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversationInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"conversationUser\",\n          children: conversation.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"conversationPreview\",\n          children: conversation.lastMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)]\n    }, conversation.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = ConversationsList;\nfunction ConversationDetails({\n  conversation\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversationDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Conversation with \", conversation.user]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), conversation.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ConversationDetails;\nfunction Message() {\n  _s();\n  const [activeConversationId, setActiveConversationId] = useState(null);\n  const handleSelectConversation = id => {\n    setActiveConversationId(id);\n  };\n  const activeConversation = mockConversations.find(conversation => conversation.id === activeConversationId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: [/*#__PURE__*/_jsxDEV(ConversationsList, {\n      conversations: mockConversations,\n      onSelectConversation: handleSelectConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), activeConversation && /*#__PURE__*/_jsxDEV(ConversationDetails, {\n      conversation: activeConversation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Message, \"yvyxylYcqbgEyjZLTqM7+hUfgnE=\");\n_c3 = Message;\nexport default Message;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ConversationsList\");\n$RefreshReg$(_c2, \"ConversationDetails\");\n$RefreshReg$(_c3, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","mockConversations","id","user","messages","ConversationsList","onSelectConversation","conversations","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","conversation","onClick","src","avatarUrl","alt","lastMessage","_c","ConversationDetails","message","index","_c2","Message","_s","activeConversationId","setActiveConversationId","handleSelectConversation","activeConversation","find","_c3","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Message.css'; // Import your CSS file where you define the layout styles\r\n\r\n// Mock data\r\nconst mockConversations = [\r\n  { id: 1, user: 'Alice', messages: ['Hi', 'How are you?'] },\r\n  { id: 2, user: 'Bob', messages: ['Hello', 'Good morning'] },\r\n  // ... other conversations\r\n];\r\n\r\nfunction ConversationsList({ onSelectConversation, conversations }) {\r\n  return (\r\n    <div className=\"conversationsList\">\r\n      <input type=\"search\" placeholder=\"Search\" className=\"searchBar\"/>\r\n      {conversations.map((conversation) => (\r\n        <div key={conversation.id} className=\"conversationItem\" onClick={() => onSelectConversation(conversation.id)}>\r\n          <img src={conversation.avatarUrl} alt={`${conversation.user}'s avatar`} className=\"avatar\" />\r\n          <div className=\"conversationInfo\">\r\n            <h3 className=\"conversationUser\">{conversation.user}</h3>\r\n            <p className=\"conversationPreview\">{conversation.lastMessage}</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nfunction ConversationDetails({ conversation }) {\r\n  return (\r\n    <div className=\"conversationDetails\">\r\n      <h2>Conversation with {conversation.user}</h2>\r\n      {conversation.messages.map((message, index) => (\r\n        <p key={index}>{message}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Message() {\r\n  const [activeConversationId, setActiveConversationId] = useState(null);\r\n\r\n  const handleSelectConversation = (id) => {\r\n    setActiveConversationId(id);\r\n  };\r\n\r\n  const activeConversation = mockConversations.find(\r\n    (conversation) => conversation.id === activeConversationId\r\n  );\r\n\r\n  return (\r\n    <div className=\"appContainer\">\r\n      <ConversationsList\r\n        conversations={mockConversations}\r\n        onSelectConversation={handleSelectConversation}\r\n      />\r\n      {activeConversation && <ConversationDetails conversation={activeConversation} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}