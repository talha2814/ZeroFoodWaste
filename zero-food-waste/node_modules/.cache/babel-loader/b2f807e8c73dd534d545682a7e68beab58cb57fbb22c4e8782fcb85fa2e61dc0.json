{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  // State to keep track of the currently selected conversation and new messages\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Replace with your actual logic to handle conversation selection\n  const selectConversation = conversation => {\n    setSelectedConversation(conversation);\n    // Fetch messages for the selected conversation\n  };\n\n  // Replace with your actual logic to handle sending messages\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      // Logic to send message\n      // Clear the message input after sending\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"conversation-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"conversation-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"conversation-header\",\n        children: selectedConversation ? selectedConversation.name : 'Select a conversation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-thread\",\n        children: selectedConversation && selectedConversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type new message here\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"cA+Ul72zM1mmHWFJpHQ8OcM15O4=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Message","_s","selectedConversation","setSelectedConversation","newMessage","setNewMessage","selectConversation","conversation","sendMessage","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","messages","map","msg","index","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Message.css';\r\nconst Message= () => {\r\n  // State to keep track of the currently selected conversation and new messages\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  // Replace with your actual logic to handle conversation selection\r\n  const selectConversation = (conversation) => {\r\n    setSelectedConversation(conversation);\r\n    // Fetch messages for the selected conversation\r\n  };\r\n\r\n  // Replace with your actual logic to handle sending messages\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      // Logic to send message\r\n      // Clear the message input after sending\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-app-container\">\r\n      <aside className=\"conversation-list\">\r\n        {/* Render your conversation list here */}\r\n      </aside>\r\n      <section className=\"conversation-view\">\r\n        {/* Header */}\r\n        <div className=\"conversation-header\">\r\n          {selectedConversation ? selectedConversation.name : 'Select a conversation'}\r\n        </div>\r\n        {/* Messages */}\r\n        <div className=\"message-thread\">\r\n          {selectedConversation && selectedConversation.messages.map((msg, index) => (\r\n            <div key={index} className=\"message\">{msg}</div>\r\n          ))}\r\n        </div>\r\n        {/* Message input */}\r\n        <div className=\"message-input-area\">\r\n          <input \r\n            type=\"text\"\r\n            placeholder=\"Type new message here\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n          />\r\n          <button onClick={sendMessage}>âž¤</button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,OAAO,GAAEA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMS,kBAAkB,GAAIC,YAAY,IAAK;IAC3CJ,uBAAuB,CAACI,YAAY,CAAC;IACrC;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIJ,UAAU,CAACK,IAAI,CAAC,CAAC,EAAE;MACrB;MACA;MACAJ,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCZ,OAAA;MAAOW,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC,eACRhB,OAAA;MAASW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAEpCZ,OAAA;QAAKW,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EACjCT,oBAAoB,GAAGA,oBAAoB,CAACc,IAAI,GAAG;MAAuB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,eAENhB,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BT,oBAAoB,IAAIA,oBAAoB,CAACe,QAAQ,CAACC,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpErB,OAAA;UAAiBW,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAEQ;QAAG,GAA/BC,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgC,CAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhB,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCZ,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uBAAuB;UACnCC,KAAK,EAAEnB,UAAW;UAClBoB,QAAQ,EAAGC,CAAC,IAAKpB,aAAa,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFhB,OAAA;UAAQ4B,OAAO,EAAEnB,WAAY;UAAAG,QAAA,EAAC;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACd,EAAA,CAjDID,OAAO;AAAA4B,EAAA,GAAP5B,OAAO;AAmDb,eAAeA,OAAO;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}