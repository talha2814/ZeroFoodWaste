{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Message.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Message.css'; // Your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Message = () => {\n  _s();\n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [conversations, setConversations] = useState([\n    // ... mock conversation data\n  ]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSelectConversation = conversation => {\n    setSelectedConversation(conversation);\n    // You might want to fetch the conversation messages here if not already loaded\n  };\n  const handleSendMessage = () => {\n    if (!newMessage.trim() || !selectedConversation) return;\n    // Implement the send message functionality here\n    // After sending the message, clear the input field\n    setNewMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"conversation-list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"conversation-details\",\n      children: selectedConversation ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"conversation-header\",\n          children: selectedConversation.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type new message here\",\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSendMessage,\n            className: \"send-button\",\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Select a conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Message, \"u+BQte9xGeUokzWyMpeFkMPdRx8=\");\n_c = Message;\nexport default Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Message","_s","selectedConversation","setSelectedConversation","conversations","setConversations","newMessage","setNewMessage","handleSelectConversation","conversation","handleSendMessage","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Message.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Message.css'; // Your CSS file\r\n\r\nconst Message = () => {\r\n  const [selectedConversation, setSelectedConversation] = useState(null);\r\n  const [conversations, setConversations] = useState([\r\n    // ... mock conversation data\r\n  ]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  const handleSelectConversation = (conversation) => {\r\n    setSelectedConversation(conversation);\r\n    // You might want to fetch the conversation messages here if not already loaded\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!newMessage.trim() || !selectedConversation) return;\r\n    // Implement the send message functionality here\r\n    // After sending the message, clear the input field\r\n    setNewMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"message-app\">\r\n      <aside className=\"conversation-list\">\r\n        {/* ... */}\r\n      </aside>\r\n      <main className=\"conversation-details\">\r\n        {selectedConversation ? (\r\n          <>\r\n            <div className=\"conversation-header\">\r\n              {selectedConversation.name}\r\n              {/* ... other header content */}\r\n            </div>\r\n            <div className=\"messages\">\r\n              {/* Render messages here */}\r\n            </div>\r\n            <div className=\"message-input-container\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                placeholder=\"Type new message here\"\r\n                className=\"message-input\"\r\n              />\r\n              <button onClick={handleSendMessage} className=\"send-button\">âž¤</button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>Select a conversation</div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtE,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC;IACjD;EAAA,CACD,CAAC;EACF,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMa,wBAAwB,GAAIC,YAAY,IAAK;IACjDN,uBAAuB,CAACM,YAAY,CAAC;IACrC;EACF,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACJ,UAAU,CAACK,IAAI,CAAC,CAAC,IAAI,CAACT,oBAAoB,EAAE;IACjD;IACA;IACAK,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEV,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BhB,OAAA;MAAOe,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE7B,CAAC,eACRpB,OAAA;MAAMe,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EACnCX,oBAAoB,gBACnBL,OAAA,CAAAE,SAAA;QAAAc,QAAA,gBACEhB,OAAA;UAAKe,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EACjCX,oBAAoB,CAACgB;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEvB,CAAC,eACNpB,OAAA;UAAKe,SAAS,EAAC;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEpB,CAAC,eACNpB,OAAA;UAAKe,SAAS,EAAC,yBAAyB;UAAAC,QAAA,gBACtChB,OAAA;YACEsB,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEd,UAAW;YAClBe,QAAQ,EAAGC,CAAC,IAAKf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC/CI,WAAW,EAAC,uBAAuB;YACnCZ,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eACFpB,OAAA;YAAQ4B,OAAO,EAAEf,iBAAkB;YAACE,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC;MAAA,eACN,CAAC,gBAEHpB,OAAA;QAAAgB,QAAA,EAAK;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAChB,EAAA,CAnDID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}