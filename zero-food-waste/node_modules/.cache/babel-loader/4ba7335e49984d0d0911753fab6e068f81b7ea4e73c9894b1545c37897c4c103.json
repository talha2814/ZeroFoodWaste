{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amimu\\\\OneDrive\\\\Desktop\\\\FYP\\\\zero-food-waste\\\\src\\\\Pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Home.css';\nimport image1 from '../../images/image1.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [postText, setPostText] = useState('');\n  const [image, setImage] = useState(null);\n\n  // Mock user data - replace with actual data as needed\n  const user = {\n    name: 'John Doe',\n    // Replace with actual user name\n    profilePic: 'image1' // Replace with actual profile picture path\n  };\n  const handleTextChange = event => {\n    setPostText(event.target.value);\n  };\n  const handleImageChange = event => {\n    setImage(event.target.files[0]);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Process and send data to the server\n    console.log(postText);\n    if (image) {\n      console.log(image.name);\n    }\n    // Clear the form\n    setPostText('');\n    setImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.profilePic,\n        alt: user.name,\n        className: \"profile-pic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-name\",\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-post-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"You want to donate some food today?\",\n          value: postText,\n          onChange: handleTextChange,\n          className: \"post-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          className: \"post-image-upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-post-button\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"2gqTpq3If0Bm7eFNU78A4KomT54=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","image1","jsxDEV","_jsxDEV","Home","_s","postText","setPostText","image","setImage","user","name","profilePic","handleTextChange","event","target","value","handleImageChange","files","handleSubmit","preventDefault","console","log","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/amimu/OneDrive/Desktop/FYP/zero-food-waste/src/Pages/Home.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../CSS/Home.css';\r\nimport image1 from '../../images/image1.jpeg';\r\n\r\n\r\nconst Home = () => {\r\n  const [postText, setPostText] = useState('');\r\n  const [image, setImage] = useState(null);\r\n\r\n  // Mock user data - replace with actual data as needed\r\n  const user = {\r\n    name: 'John Doe', // Replace with actual user name\r\n    profilePic: 'image1', // Replace with actual profile picture path\r\n  };\r\n\r\n  const handleTextChange = (event) => {\r\n    setPostText(event.target.value);\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    setImage(event.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // Process and send data to the server\r\n    console.log(postText);\r\n    if (image) {\r\n      console.log(image.name);\r\n    }\r\n    // Clear the form\r\n    setPostText('');\r\n    setImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"post-form-container\">\r\n      <div className=\"user-profile\">\r\n        <img src={user.profilePic} alt={user.name} className=\"profile-pic\" />\r\n        <p className=\"user-name\">{user.name}</p>\r\n      </div>\r\n      <div className=\"new-post-container\">\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"You want to donate some food today?\"\r\n            value={postText}\r\n            onChange={handleTextChange}\r\n            className=\"post-input\"\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            onChange={handleImageChange}\r\n            className=\"post-image-upload\"\r\n          />\r\n          <button type=\"submit\" className=\"submit-post-button\">\r\n            Post\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}